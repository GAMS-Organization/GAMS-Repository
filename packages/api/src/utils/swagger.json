{
  "openapi": "3.0.1",
  "info": {
    "title": "Rooftop Dashboard Api",
    "description": "REST API for dashboard app.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3002/",
      "description": "Local server"
    },
    {
      "url": "https://api_url_testing",
      "description": "Testing server"
    },
    {
      "url": "https://api_url_production",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Login",
      "description": "API for login into the system"
    },
    {
      "name": "Users",
      "description": "API for users in the system - Role admin required"
    },
    {
      "name": "Rooftoppers",
      "description": "API for rooftopper profiles in the system - Role headhunter required"
    },
    {
      "name": "Educations",
      "description": "API for educations of rooftopper profiles in the system - Role headhunter required"
    }
  ],
  "paths": {
    "/v1/auth/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Login into the system",
        "requestBody": {
          "description": "Login into the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized"
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "security": [
          {
            "auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "403": {
            "description": "Error: Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Create a new user in system",
        "requestBody": {
          "description": "Create a new user in system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateEditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "403": {
            "description": "Error: Forbidden"
          },
          "422": {
            "description": "Error: Unprocessable Entity"
          }
        }
      }
    },
    "/v1/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Get user with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user that we want to match",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateEditResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Update User with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user that we want to match",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Update user in system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEdit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateEditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "403": {
            "description": "Error: Forbidden"
          },
          "404": {
            "description": "Failed. User not found."
          },
          "422": {
            "description": "Error: Unprocessable Entity"
          }
        }
      }
    },
    "/v1/users/{id}/enable": {
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Enable user with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user that we want to enable",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateEditResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      }
    },
    "/v1/users/{id}/disable": {
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Disable user with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user that we want to disable",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateEditResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      }
    },
    "/v1/rooftopper-profiles": {
      "get": {
        "tags": [
          "Rooftoppers"
        ],
        "summary": "Get all Rooftoppers",
        "security": [
          {
            "auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RooftoppersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "403": {
            "description": "Error: Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Rooftoppers"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Create a new rooftopper in system",
        "requestBody": {
          "description": "Create a new rooftopper in system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rooftopper"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RooftopperCreateEditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "403": {
            "description": "Error: Forbidden"
          },
          "422": {
            "description": "Error: Unprocessable Entity"
          }
        }
      }
    },
    "/v1/rooftopper-profiles/{id}": {
      "get": {
        "tags": [
          "Rooftoppers"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Get rooftopper with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the rooftopper that we want to match",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RooftopperCreateEditResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      },
      "put": {
        "tags": [
          "Rooftoppers"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Update rooftopper with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the rooftopper that we want to match",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Update rooftopper in system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rooftopper"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateEditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "403": {
            "description": "Error: Forbidden"
          },
          "404": {
            "description": "Failed. User not found."
          },
          "422": {
            "description": "Error: Unprocessable Entity"
          }
        }
      },
      "delete": {
        "tags": [
          "Rooftoppers"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Delete rooftopper with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the rooftopper that we want to match",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      }
    },
    "/v1/rooftopper-profiles/{id}/enable": {
      "get": {
        "tags": [
          "Rooftoppers"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Enable rooftopper with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the rooftopper that we want to enable",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RooftopperCreateEditResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "404": {
            "description": "Failed. Rooftopper not found."
          }
        }
      }
    },
    "/v1/rooftopper-profiles/{id}/disable": {
      "get": {
        "tags": [
          "Rooftoppers"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Disable rooftopper with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the rooftopper that we want to disable",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RooftopperCreateEditResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "404": {
            "description": "Failed. Rooftopper not found."
          }
        }
      }
    },
    "/v1/rooftopper-profiles/slug/{slug}": {
      "get": {
        "tags": [
          "Rooftoppers"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Get rooftopper with given Slug",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug of the rooftopper that we want to show",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z0-9-]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RooftopperCreateEditResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "404": {
            "description": "Failed. Rooftopper not found."
          }
        }
      }
    },
    "/v1/educations": {
      "get": {
        "tags": [
          "Educations"
        ],
        "summary": "Get all educations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "403": {
            "description": "Error: Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Educations"
        ],
        "summary": "Create a new education in system",
        "requestBody": {
          "description": "Create a new education in system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationCreateEditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "403": {
            "description": "Error: Forbidden"
          },
          "422": {
            "description": "Error: Unprocessable Entity"
          }
        }
      }
    },
    "/v1/educations/{id}": {
      "get": {
        "tags": [
          "Educations"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Get Education with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Education that we want to match",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationCreateEditResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "404": {
            "description": "Failed. Education not found."
          }
        }
      },
      "put": {
        "tags": [
          "Educations"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Update Education with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the rooftopper that we want to match",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Update Educations in system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationCreateEditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "403": {
            "description": "Error: Forbidden"
          },
          "404": {
            "description": "Failed. Education not found."
          },
          "422": {
            "description": "Error: Unprocessable Entity"
          }
        }
      },
      "delete": {
        "tags": [
          "Educations"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Delete Education with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Education that we want to match",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Error: Unauthorized"
          },
          "404": {
            "description": "Failed. Education not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Login": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "password": {
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          }
        },
        "example": {
          "username": "rooftopAdmin",
          "password": "rooftopAdmin2019"
        }
      },
      "UserCreateEditResponse": {
        "properties": {
          "data": {
            "properties": {
              "id": {
                "type": "number"
              },
              "username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "surname": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "roles": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          },
          "details": {
            "type": "string"
          }
        }
      },
      "UserCreate": {
        "required": [
          "email",
          "name",
          "password",
          "passwordConfirmation",
          "roles",
          "surname",
          "username"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "surname": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "username": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "password": {
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          },
          "passwordConfirmation": {
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "admin",
                "headhunter"
              ]
            }
          }
        },
        "example": {
          "name": "facundo",
          "surname": "moreyra",
          "email": "fmoreyra@gmail.com",
          "username": "fmoreyra",
          "password": "supersecretpassword",
          "passwordConfirmation": "supersecretpassword",
          "roles": [
            "admin",
            "headhunter"
          ]
        }
      },
      "UserEdit": {
        "required": [
          "email",
          "roles"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "surname": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "admin",
                "headhunter"
              ]
            }
          },
          "username": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "userState": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          }
        },
        "example": {
          "name": "facundo",
          "surname": "moreyra",
          "email": "fmoreyra@gmail.com",
          "roles": [
            "admin",
            "headhunter"
          ],
          "username": "fmoreyra",
          "userState": "active"
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "surname": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "itemCount": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        }
      },
      "Rooftopper": {
        "type": "object",
        "required": [
          "name",
          "surname",
          "registrationDate",
          "isAvailable",
          "isWorkingOnAnotherProject",
          "slug",
          "oneLineDescription",
          "summaryDescription",
          "city",
          "state",
          "country"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 100
          },
          "surname": {
            "type": "string",
            "minLength": 3,
            "maxLength": 100
          },
          "profileImage": {
            "type": "string"
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time"
          },
          "isAvailable": {
            "type": "boolean"
          },
          "isWorkingOnAnotherProject": {
            "type": "boolean"
          },
          "workableTime": {
            "type": "integer",
            "minimum": 1,
            "maximum": 8
          },
          "slug": {
            "type": "string",
            "pattern": "^[a-z0-9-]+$",
            "minLength": 3,
            "maxLength": 100
          },
          "oneLineDescription": {
            "type": "string",
            "minLength": 3,
            "maxLength": 100
          },
          "summaryDescription": {
            "type": "string",
            "minLength": 3,
            "maxLength": 255
          },
          "city": {
            "type": "string",
            "minLength": 3,
            "maxLength": 100
          },
          "state": {
            "type": "string",
            "minLength": 3,
            "maxLength": 100
          },
          "country": {
            "type": "string",
            "minLength": 3,
            "maxLength": 100
          }
        }
      },
      "RooftoppersResponse": {
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "surname": {
                  "type": "string"
                },
                "profileImage": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "registrationDate": {
                  "type": "string"
                },
                "isAvailable": {
                  "type": "boolean"
                },
                "isWorkingOnAnotherProject": {
                  "type": "boolean"
                },
                "workableTime": {
                  "type": "number"
                },
                "oneLineDescription": {
                  "type": "string"
                },
                "summaryDescription": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "profileState": {
                  "type": "string"
                }
              }
            }
          },
          "itemCount": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        }
      },
      "RooftopperCreateEditResponse": {
        "properties": {
          "data": {
            "properties": {
              "id": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "surname": {
                "type": "string"
              },
              "profileImage": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "registrationDate": {
                "type": "string"
              },
              "isAvailable": {
                "type": "boolean"
              },
              "isWorkingOnAnotherProject": {
                "type": "boolean"
              },
              "workableTime": {
                "type": "number"
              },
              "oneLineDescription": {
                "type": "string"
              },
              "summaryDescription": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "profileState": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "details": {
            "type": "string"
          }
        }
      },
      "EducationCreateEditResponse": {
        "properties": {
          "data": {
            "properties": {
              "id": {
                "type": "number"
              },
              "title": {
                "type": "string"
              },
              "grade": {
                "type": "string"
              },
              "institution": {
                "type": "string"
              },
              "startDate": {
                "type": "string"
              },
              "endDate": {
                "type": "string"
              },
              "rooftopperProfile": {
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "details": {
            "type": "string"
          }
        }
      },
      "EducationCreate": {
        "required": [
          "title",
          "grade",
          "institution",
          "startDate",
          "endDate",
          "rooftopperProfileId"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "grade": {
            "type": "string"
          },
          "institution": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "rooftopperProfileId": {
            "type": "number"
          }
        }
      },
      "EducationsResponse": {
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "title": {
                  "type": "string"
                },
                "grade": {
                  "type": "string"
                },
                "institution": {
                  "type": "string"
                },
                "startDate": {
                  "type": "string"
                },
                "endDate": {
                  "type": "string"
                },
                "rooftopperProfile": {
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "itemCount": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        }
      }
    },
    "securitySchemes": {
      "auth": {
        "type": "apiKey",
        "description": "",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
